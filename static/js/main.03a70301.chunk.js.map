{"version":3,"sources":["components/weather/WeatherImage.js","components/temperature/Temperature.js","components/location/Location.js","components/Card.js","App.js","index.js"],"names":["WeatherImage","weathertype","weatherData","weather","main","className","Temperature","temp","temp_min","temp_max","name","sys","country","Card","cod","App","props","searchInput","e","preventDefault","setState","target","value","toUpperCase","console","log","state","handleSearch","errorData","prevProp","prevState","this","fetch","then","response","json","data","type","placeholder","onChange","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03a70301.chunk.js","sourcesContent":["import React from 'react'\nimport { VscDash } from \"react-icons/vsc\";\nimport { BiCloudRain,BiCloudSnow } from \"react-icons/bi\";\nimport { RiHazeLine,RiDrizzleLine,RiMistLine } from \"react-icons/ri\";\nimport { AiOutlineCloud } from \"react-icons/ai\";\nimport { TiWeatherPartlySunny } from \"react-icons/ti\";\nimport { GiFog } from \"react-icons/gi\";\nimport { WiSmoke } from \"react-icons/wi\";\nimport './weather-image.css'\n\n\n\nexport default function WeatherImage({weatherData}){\nlet weathertype = weatherData.weather[0].main\nif(weathertype === \"Haze\"){\n    return(\n        <div className = 'weather-image-container'>\n        <RiHazeLine className=\"weather-icon\"/>\n        <div>{weathertype}</div>\n        </div>\n    )\n}else if(weathertype === 'Clouds'){\n    return(\n        <div className = 'weather-image-container'>\n        <AiOutlineCloud className=\"weather-icon\"/>\n        <div>{weathertype}</div>\n        </div>\n    )\n}else if(weathertype === 'Sunny'){\n    return(\n        <div className = 'weather-image-container'>\n        <TiWeatherPartlySunny className=\"weather-icon\"/>\n        <div>{weathertype}</div>\n        </div>\n    )\n}else if(weathertype === 'Rain'){\n    return(\n        <div className = 'weather-image-container'>\n        <BiCloudRain className=\"weather-icon\"/>\n        <div>{weathertype}</div>\n        </div>\n)}\nelse if(weathertype === 'Snow'){\n    return(\n        <div className = 'weather-image-container'>\n        <BiCloudSnow className=\"weather-icon\"/>\n        <div>{weathertype}</div>\n        </div>\n)}else if(weathertype === 'Drizzle'){\n        return(\n            <div className = 'weather-image-container'>\n            <RiDrizzleLine className=\"weather-icon\"/>\n            <div>{weathertype}</div>\n            </div>\n        )}\n        else if(weathertype === 'Mist'){\n            return(\n                <div className = 'weather-image-container'>\n                <RiMistLine className=\"weather-icon\"/>\n                <div>{weathertype}</div>\n                </div>\n            )}\n            else if(weathertype === 'Smoke'){\n                return(\n                    <div className = 'weather-image-container'>\n                    <WiSmoke className=\"weather-icon\"/>\n                    <div>{weathertype}</div>\n                    </div>\n                )}\n                else if(weathertype === 'Fog'){\n                    return(\n                        <div className = 'weather-image-container'>\n                        <GiFog className=\"weather-icon\"/>\n                        <div>{weathertype}</div>\n                        </div>\n                    )}else{\n    return(\n        <div className = 'weather-image-container'>\n            <VscDash className=\"weather-icon\"/>\n            <div>{weathertype}</div>\n        </div>\n    )\n}\n}","import React from 'react'\nimport './temperature.css'\nimport { RiCelsiusLine } from \"react-icons/ri\";\n\nexport default function Temperature({weatherData}){\n\n\n    return(\n        \n        <div className = \"temperature-container\">\n            <div className='current-temp'>{weatherData.main.temp} <RiCelsiusLine/>  </div>\n          <div className=\"min-max\">\n            <div className=\"min-temp\">min {weatherData.main.temp_min}</div>\n            <div className=\"max-temp\">max {weatherData.main.temp_max}</div>\n          </div>\n\n        </div>\n    )\n}","import React from 'react'\nimport './location.css'\n\n\n\nexport default function WeatherImage({weatherData}){\n    return(\n        <div className=\"location-container\">\n            \n            {weatherData.name},{weatherData.sys.country}\n        </div>\n    )\n}","import React from 'react'\nimport './card.css'\nimport WeatherImage from './weather/WeatherImage'\nimport Temperature from './temperature/Temperature'\nimport Location from './location/Location'\nexport default function Card({weatherData}){\n    if(weatherData.cod === \"404\"){\n        return(\n            <div>check your spelling!</div>\n        )\n    }\n    return(\n        <div className='card-wrapper'>\n            <WeatherImage  weatherData={weatherData}/>\n            <Temperature  weatherData={weatherData}/>\n            <Location   weatherData={weatherData}/>\n            \n        </div>\n    )\n}","import React,{Component} from 'react'\nimport './App.css';\nimport Card from './components/Card'\nimport { SiCloudflare } from \"react-icons/si\";\n\nexport default class App extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            country:'',\n            errorData:{\"cod\":\"404\",\"message\":\"city not found\"},\n            weatherData:{\"coord\":{\"lon\":-0.1257,\"lat\":51.5085},\"weather\":[{\"id\":804,\"main\":\"\",\"description\":\"overcast clouds\",\"icon\":\"04n\"}],\"base\":\"stations\",\"main\":{\"temp\":'',\"feels_like\":3.83,\"temp_min\":'',\"temp_max\":'',\"pressure\":1000,\"humidity\":87},\"visibility\":10000,\"wind\":{\"speed\":6.69,\"deg\":210,\"gust\":12.35},\"clouds\":{\"all\":90},\"dt\":1615404113,\"sys\":{\"type\":1,\"id\":1414,\"country\":\"\",\"sunrise\":1615357548,\"sunset\":1615398956},\"timezone\":0,\"id\":2643743,\"name\":\"\",\"cod\":200}\n        }\n\n    }\n\n    searchInput = (e) =>{\n        e.preventDefault()\n        this.setState({\n            country: e.target.value.toUpperCase()\n        })\n        console.log(this.state.country)\n    }\n\n    handleSearch = (e) =>{\n        e.preventDefault()\n    console.log('noo')\n}\n\n    componentDidUpdate(prevProp, prevState){\n        if(this.state.country !== prevState.country){\n            this.handleSearch = (e) =>{\n                e.preventDefault()\n                    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.country}&units=metric&appid=bf44c1dafffa6ce5b4ea8c8674a34fe3`)\n                    .then(response => response.json())\n                    .then(data => this.setState({weatherData: data})\n                    );\n            }\n        }\n        console.log(this.state.weatherData)\n\n    }\n\n\n    render(){\n\n        return(\n            <div className= 'App'>\n                \n                <nav className=\"navigation\"><form className='form'>\n                    <div className=\"logo-container\">  <SiCloudflare className=\"App-logo\"/> </div>\n                    <input className='input' type='text' placeholder='location'  value={this.state.country} onChange={(e) => this.searchInput(e)}/>\n                    <div className='button' onClick={(e)=> this.handleSearch(e)}>Search</div>\n                    </form>\n                    </nav>\n            <div className=\"App-header\">\n                \n                <Card weatherData = {this.state.weatherData} />\n            </div>\n            </div>\n        )\n    }\n}\n\n\n/*\nadd images\nadd degree celcius\nadd min temp\nadd temp max\nadd country\nadd lights change \ncss moon\nfix wrong city\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}